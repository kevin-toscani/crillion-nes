;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;  CONCEPT SCRIPT: BONUS SEQUENCE
;;  count down bonus value, add bonus to score with a predefined multiplier,
;;  play random beeps with fadeout at the end. This is an untested script
;;  that should be implemented, tested and modified if needed.
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;  The basic idea is this:
;;
;;     BONUS_COUNTDOWN_PER_FRAME = #3
;;     BONUS_SCORE_UNIT = #10
;;
;;     while (bonus > 0) {
;;         if(bonus < BONUS_COUNTDOWN_PER_FRAME) {
;;             score += BONUS_SCORE_UNIT * bonus
;;             bonus = 0
;;         }
;;
;;         else {
;;             score += BONUS_SCORE_UNIT * BONUS_COUNTDOWN_PER_FRAME
;;             bonus -= BONUS_COUNTDOWN_PER_FRAME
;;         }
;;
;;         update hud values for bonus and score
;;         play 1 random beep at full volume
;;     }
;;
;;     play 15 random beeps at decreasing volume
;;     ($4000 = DDLCVVVV = 1011vvvv; duty cycle 2, infinite, constant, at volume vvvv)
;;
;;



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; in game constants
BONUS_COUNTDOWN_PER_FRAME = #3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; in end level routine
    LDA #$B8
    STA soft_pulse1

    LDA #$01
    STA do_beeps

    -bonusPointsLoop:
        ;; Check how many bonus points to subtract
        ;; (either the max, or what's left)
        LDA ball_bonus
        ORA ball_bonus+1
        BNE +fullBonus
        LDA ball_bonus+2
        CMP #BONUS_COUNTDOWN_PER_FRAME
        BCS +partBonus
        +fullBonus:
        LDA #BONUS_COUNTDOWN_PER_FRAME
        +partBonus:

        ;; Put value that's added to score on the stack
        TAX
        LDA tbl_BonusToScore,x
        PHA

        ;; Subtract X-register from bonus
        JSR sub_SubtractXFromBonus

        ;; Get value from stack and add it to the score
        PLA
        JSR sub_AddAccumulatorToScore

        ;; Wait for NMI
        JSR sub_WaitForNMI

        ;; Check if bonus countdown is done
        LDA ball_bonus
        ORA ball_bonus+1
        ORA ball_bonus+2
    BNE -bonusPointsLoop

    ;; fade out the beeping
    LDX #$08
    -fadeOutLoop:
        JSR sub_WaitForNMI
        DEC soft_pulse1
        DEX
    BNE -fadeOutLoop

    ;; Stop random beeping
    LDA #$02
    STA do_beeps
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; in subroutines
sub_SubtractXFromBonus:
    STX temp+9
    LDA ball_bonus+2
    SEC
    SBC temp+9
    BMI +
        STA ball_bonus+2
        JMP +updateBonusOnScreen
    +

    CLC
    ADC #$0A
    STA ball_bonus+2
    DEC ball_bonus+1
    BPL +updateBonusOnScreen

    LDA #$09
    STA ball_bonus+1
    DEC ball_bonus
    BPL +updateBonusOnScreen

    LDA #$00
    STA ball_bonus

    +updateBonusOnScreen:
    LDA #$20
    STA temp
    LDA #$9C
    STA temp+1
    LDX #$02
    
    -updateNextDigit:
        LDA ball_bonus,x
        CLC
        ADC #$01
        STA temp+2
        JSR sub_WriteByteToPPUBuffer
        DEC temp+1
        DEX
    BPL -updateNextDigit

    RTS
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; in tables
tbl_BonusToScore:
    .db #00, #10, #20, #30, #40, #50, #60, #70, #80, #90
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Other updates:
;; In /game/test/random_descending_bleeps.asm, replace line 22:
    LDA #$B8
;; with:
    LDA soft_pulse1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

